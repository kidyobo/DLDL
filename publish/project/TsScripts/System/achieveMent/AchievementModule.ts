import { Global as G } from 'System/global'
import { ConfirmCheck } from 'System/tip/TipManager'
import { AchievementData } from 'System/data/AchievementData'
import { EventDispatcher } from "System/EventDispatcher"
import { ErrorId } from 'System/protocol/ErrorId'
import { Macros } from 'System/protocol/Macros'
import { TitleCanUseTipView } from 'System/achieveMent/TitleCanUseTipView'
/**
 * <在此键入模块的中文名称>模块。
 *
 * 本文件代码由模板生成，你可能需要继续修改其他代码文件（比如EnumModuleName）才能正常使用。
 * Code generated by Bat&Perl.
 *
 * @author Administrator
 *
 */
export class AchievementModule extends EventDispatcher {


    private achievementData: AchievementData;

    constructor() {
        super();
        this.achievementData = G.DataMgr.achievementData;
        this.addNetListener(Macros.MsgID_AchiGet_Response, this._onAchiGetResponse);
        this.addNetListener(Macros.MsgID_AchiChange_Notify, this._onAchiChangeNotify);
        this.addNetListener(Macros.MsgID_SpecialThingUsable_Notify, this._onAchiNameGetResponse);
    }


    /**特殊物品可使用通知*/
    private _onAchiNameGetResponse(response: Protocol.SpecialThingUsable_Notify): void {
        G.Uimgr.createForm<TitleCanUseTipView>(TitleCanUseTipView).open(response);
    }


    ///////////////////////////////////////// 对话框管理 /////////////////////////////////////////
    /**拉取成就数据响应*/
    private _onAchiGetResponse(response: Protocol.AchiGet_Response): void {
        if (ErrorId.EQEC_Success != response.m_uiResult) {
            G.TipMgr.addMainFloatTip(G.DataMgr.errorData.getErrorStringById(response.m_uiResult));
            return;
        }
        this.achievementData.currentAchiValue = response.m_stAllData.m_uiAchiValue;
        //this.achievementData.setAchiAttr();
        this.achievementData.clearAchiNetDic();
        let m_stDataList: Protocol.CSOneAchiData[] = response.m_stAllData.m_stDataList;
        for (let obj of m_stDataList) {
            this.achievementData.achiNetDic[obj.m_uiAchiID] = obj;
        }
        this.achievementData.checkAllAchiProgress();
        this.achievementData.achievementInfo = response.m_stAllData;
    }

    /**一条成就改变通知*/
    private _onAchiChangeNotify(response: Protocol.AchiChange_Notify): void {
        this.achievementData.achiNetDic[response.m_stOneData.m_uiAchiID] = response.m_stOneData;
        if (response.m_stOneData.m_bDone) {
            this.achievementData.currentGetAchiNotify = response;
        }
        this.achievementData.currentAchiValue = response.m_uiAchiValue;
        this.achievementData.checkAllAchiProgress();
    }






}
